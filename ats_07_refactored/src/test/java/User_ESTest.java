/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 31 14:43:25 GMT 2020
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import traz_aqui.Buyer;
import traz_aqui.Loja;
import traz_aqui.Transportadora;
import traz_aqui.User;
import traz_aqui.Voluntario;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class User_ESTest extends User_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      Transportadora transportadora1 = new Transportadora("", "8M", "", 1295.64480785, 1295.64480785, "8M", 1295.64480785, 1295.64480785, (-1), (-2451), 1.0);
      boolean boolean0 = transportadora0.equals(transportadora1);
      assertEquals("", transportadora1.getPassword());
      assertFalse(boolean0);
      assertEquals("", transportadora1.getUserName());
      assertEquals("8M", transportadora1.getCodigo());
      assertEquals(0.0, transportadora0.getLocationX(), 0.01);
      assertEquals("8M", transportadora1.getEmail());
      assertEquals(1295.64480785, transportadora1.getLocationX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      String string0 = transportadora0.toString();
      assertEquals("  0.0 0.0  0.00.000.00.0", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Loja loja0 = new Loja();
      String string0 = loja0.stringtoFile();
      assertEquals("Utilizador:,,,0.0,0.0,", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Voluntario voluntario0 = new Voluntario((String) null, "eFZ", (String) null, 0.0, 0.0, (String) null, (-939.988), true, 0.0, (-939.988));
      String string0 = voluntario0.getUserName();
      assertNull(string0);
      assertEquals(0.0, voluntario0.getLocationY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("traz_aqui.User", "traz_aqui.User", "", 6652.2712844491525, 0.5, " ", 0.5, 5.0, 206, 0.0, 3147.485);
      String string0 = transportadora0.getUserName();
      assertEquals(" ", transportadora0.getEmail());
      assertEquals("", transportadora0.getPassword());
      assertEquals(6652.2712844491525, transportadora0.getLocationX(), 0.01);
      assertEquals("traz_aqui.User", transportadora0.getCodigo());
      assertEquals("traz_aqui.User", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Loja loja0 = new Loja((String) null, (String) null, (String) null, 0.0, 0.0, (String) null);
      loja0.getPassword();
      assertEquals(0.0, loja0.getLocationX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      transportadora0.getPassword();
      assertEquals(0.0, transportadora0.getLocationX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      double double0 = transportadora0.getLocationY();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("LeW}x*V4EBE?6", "LeW}x*V4EBE?6", "LeW}x*V4EBE?6", 0.5, 0.0, "LeW}x*V4EBE?6", 1615.2891, 0.5, 2605, 0.0, 5.0);
      double double0 = transportadora0.getLocationY();
      assertEquals(0.5, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Voluntario voluntario0 = new Voluntario();
      double double0 = voluntario0.getLocationX();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Voluntario voluntario0 = new Voluntario("", "", "lr50:`6kjyvorFG", 431.547089192, (-1.0), "", (-1.0), true, (-1.0), (-1.0));
      double double0 = voluntario0.getLocationX();
      assertEquals("", voluntario0.getEmail());
      assertEquals("lr50:`6kjyvorFG", voluntario0.getPassword());
      assertEquals(431.547089192, double0, 0.01);
      assertEquals("", voluntario0.getCodigo());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.email = "Rh;";
      loja0.getEmail();
      assertEquals("Rh;", loja0.getEmail());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.getEmail();
      assertEquals(0.0, loja0.getLocationX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Loja loja0 = new Loja((String) null, (String) null, (String) null, (-2958.9), (-1.0), (String) null);
      loja0.getCodigo();
      assertEquals((-2958.9), loja0.getLocationY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Buyer buyer0 = new Buyer("at", "traz_aqui.User", "at", 1.0, 1.0, "traz_aqui.User");
      String string0 = buyer0.getCodigo();
      assertEquals("traz_aqui.User", string0);
      assertEquals("traz_aqui.User", buyer0.getEmail());
      assertNotNull(string0);
      assertEquals(1.0, buyer0.getLocationY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Loja loja0 = new Loja();
      User user0 = loja0.clone();
      assertEquals(0.0, user0.getLocationX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Voluntario voluntario0 = new Voluntario("traz_aqui.Buyer", "traz_aqui.Buyer", "2%pE", 3538.1674049941, 706.55949132309, "traz_aqui.Buyer", 706.55949132309, false, 706.55949132309, 1.0);
      User user0 = voluntario0.clone();
      assertEquals("traz_aqui.Buyer", voluntario0.getUserName());
      assertEquals("traz_aqui.Buyer", user0.getUserName());
      assertEquals(3538.1674049941, user0.getLocationY(), 0.01);
      assertEquals("traz_aqui.Buyer", voluntario0.getEmail());
      assertEquals(3538.1674049941, voluntario0.getLocationY(), 0.01);
      assertEquals("traz_aqui.Buyer", user0.getPassword());
      assertEquals("2%pE", user0.getCodigo());
      assertEquals("traz_aqui.Buyer", user0.getEmail());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Loja loja0 = new Loja("PF'L=iH1,?'DsEFAI", "PF'L=iH1,?'DsEFAI", "PF'L=iH1,?'DsEFAI", (-2368.652527), (-2368.652527), "");
      User user0 = loja0.clone();
      assertEquals("PF'L=iH1,?'DsEFAI", user0.getUserName());
      assertEquals("", user0.getEmail());
      assertTrue(user0.equals((Object)loja0));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.locationX = null;
      // Undeclared exception!
      try { 
        loja0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.locationX = null;
      // Undeclared exception!
      try { 
        loja0.stringtoFile();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Buyer buyer0 = new Buyer();
      buyer0.locationX = null;
      // Undeclared exception!
      try { 
        buyer0.getLocationY();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Voluntario voluntario0 = new Voluntario();
      voluntario0.locationX = null;
      // Undeclared exception!
      try { 
        voluntario0.getLocationX();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Voluntario voluntario0 = new Voluntario();
      Voluntario voluntario1 = new Voluntario(voluntario0);
      voluntario0.locationX = null;
      // Undeclared exception!
      try { 
        voluntario0.equals(voluntario1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      transportadora0.locationX = null;
      // Undeclared exception!
      try { 
        transportadora0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Loja loja0 = new Loja(")e^3VX a)", ")e^3VX a)", ")e^3VX a)", (-65.515827275503), (-65.515827275503), (String) null);
      String string0 = loja0.getEmail();
      assertEquals((-65.515827275503), loja0.getLocationY(), 0.01);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Buyer buyer0 = new Buyer("", "YvD%+", "", 5.0, 1.0, (String) null);
      String string0 = buyer0.getUserName();
      assertEquals(5.0, buyer0.getLocationX(), 0.01);
      assertEquals("YvD%+", buyer0.getCodigo());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Voluntario voluntario0 = new Voluntario("wj! \"z&r7R+UUAlMRX", "YvD%+", "wj! \"z&r7R+UUAlMRX", (-605.8951254369981), (-605.8951254369981), (String) null, 1.0, false, (-1.0), (-1.0));
      double double0 = voluntario0.getLocationX();
      assertEquals((-605.8951254369981), double0, 0.01);
      assertEquals("YvD%+", voluntario0.getCodigo());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Loja loja0 = new Loja("", "", "T", (-1171.4), (-1171.4), "");
      String string0 = loja0.getPassword();
      assertEquals("T", string0);
      assertNotNull(string0);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals((-1171.4), loja0.getLocationY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Loja loja0 = new Loja(")e^3VX a)", ")e^3VX a)", ")e^3VX a)", (-65.515827275503), (-65.515827275503), (String) null);
      double double0 = loja0.getLocationY();
      assertEquals((-65.515827275503), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      transportadora0.getCodigo();
      assertEquals(0.0, transportadora0.getLocationX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Voluntario voluntario0 = new Voluntario();
      voluntario0.setCodigo("c");
      Voluntario voluntario1 = new Voluntario();
      boolean boolean0 = voluntario0.equals(voluntario1);
      assertEquals("c", voluntario0.getCodigo());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      transportadora0.setPassword("  0.0 0.0  0.00.000.00.0");
      Transportadora transportadora1 = new Transportadora("", "", "  0.0 0.0  0.00.000.00.0", (-2410), (-2410), "p?eNy?S~8Tn0c;8W-", (-2410), (-2410), (-2410), (-2410), (-2410));
      boolean boolean0 = transportadora0.equals(transportadora1);
      assertEquals("  0.0 0.0  0.00.000.00.0", transportadora0.getPassword());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Loja loja0 = new Loja("P8", "P8", "P8", (-1509.8479580614348), (-1509.8479580614348), "P8");
      loja0.password = "T8";
      Loja loja1 = new Loja(loja0);
      boolean boolean0 = loja0.equals(loja1);
      assertEquals("T8", loja0.getPassword());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      transportadora0.setUserName("-");
      Transportadora transportadora1 = new Transportadora();
      boolean boolean0 = transportadora0.equals(transportadora1);
      assertEquals("-", transportadora0.getUserName());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Voluntario voluntario0 = new Voluntario();
      Voluntario voluntario1 = new Voluntario(voluntario0);
      boolean boolean0 = voluntario0.equals(voluntario1);
      assertTrue(boolean0);
      assertEquals(0.0, voluntario1.getLocationX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Voluntario voluntario0 = new Voluntario();
      Voluntario voluntario1 = new Voluntario();
      voluntario1.email = "-";
      boolean boolean0 = voluntario0.equals(voluntario1);
      assertEquals("-", voluntario1.getEmail());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Voluntario voluntario0 = new Voluntario();
      voluntario0.setLocationY(0.0);
      assertEquals(0.0, voluntario0.getLocationX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      transportadora0.setEmail(".");
      assertEquals(".", transportadora0.getEmail());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Voluntario voluntario0 = new Voluntario();
      voluntario0.setLocationX(0.0);
      assertEquals(0.0, voluntario0.getLocationY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Voluntario voluntario0 = new Voluntario();
      voluntario0.hashCode();
      assertEquals(0.0, voluntario0.getLocationX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Buyer buyer0 = new Buyer();
      Buyer buyer1 = new Buyer(buyer0);
      assertEquals(0.0, buyer1.getLocationX(), 0.01);
  }
}
