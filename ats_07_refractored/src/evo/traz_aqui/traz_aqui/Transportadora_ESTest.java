/*
 * This file was automatically generated by EvoSuite
 * Sun Dec 20 01:32:38 GMT 2020
 */

package traz_aqui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import traz_aqui.Transportadora;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Transportadora_ESTest extends Transportadora_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("", "", "", (-1961.9309153430352), 0.0, ".a{}&8m8", (-1961.9309153430352), 1.0, (-5590), (-1437.268), 1.0);
      double double0 = transportadora0.getraio();
      assertEquals((-5590), transportadora0.getnif());
      assertEquals(1.0, double0, 0.01);
      assertEquals(1.0, transportadora0.getavaliacao(), 0.01);
      assertEquals((-1961.9309153430352), transportadora0.getcustoKM(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      transportadora0.setraio((-1342));
      double double0 = transportadora0.getraio();
      assertEquals((-1342.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      double double0 = transportadora0.getnumreviews();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, transportadora0.getcustoKM(), 0.01);
      assertEquals(0, transportadora0.getnif());
      assertEquals(0.0, transportadora0.getraio(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("?M$ :BCt7#8rPV0J", "_#sfNKBV&[Ytby", "?M$ :BCt7#8rPV0J", (-2478.2), (-371.3302414), "?M$ :BCt7#8rPV0J", (-2478.2), (-2478.2), 1151, 268.883097, (-371.3302414));
      double double0 = transportadora0.getnumreviews();
      assertEquals((-2478.2), transportadora0.getcustoKM(), 0.01);
      assertEquals((-371.3302414), double0, 0.01);
      assertEquals((-2478.2), transportadora0.getraio(), 0.01);
      assertEquals(1151, transportadora0.getnif());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      int int0 = transportadora0.getnif();
      assertEquals(0.0, transportadora0.getavaliacao(), 0.01);
      assertEquals(0.0, transportadora0.getcustoKM(), 0.01);
      assertEquals(0, int0);
      assertEquals(0.0, transportadora0.getraio(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora((String) null, "", (String) null, 0.0, 0.0, "", 0.0, 0.0, (-1288), 0.0, 0.0);
      int int0 = transportadora0.getnif();
      assertEquals((-1288), int0);
      assertEquals(0.0, transportadora0.getnumreviews(), 0.01);
      assertEquals(0.0, transportadora0.getcustoKM(), 0.01);
      assertEquals(0.0, transportadora0.getraio(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora((String) null, "", (String) null, 0.0, 0.0, "", 0.0, 0.0, (-1288), 0.0, 0.0);
      double double0 = transportadora0.getcustoKM();
      assertEquals(0.0, transportadora0.getavaliacao(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, transportadora0.getraio(), 0.01);
      assertEquals((-1288), transportadora0.getnif());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      assertEquals(0.0, transportadora0.getcustoKM(), 0.01);
      
      transportadora0.setcustoKM((-1.0));
      double double0 = transportadora0.getcustoKM();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      double double0 = transportadora0.getavaliacao();
      assertEquals(0.0, transportadora0.getraio(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, transportadora0.getcustoKM(), 0.01);
      assertEquals(0, transportadora0.getnif());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      transportadora0.setnumreviews(2557.0);
      double double0 = transportadora0.getavaliacao();
      assertEquals(2557.0, transportadora0.getnumreviews(), 0.01);
      assertEquals(2557.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      transportadora0.setnif((-838));
      transportadora0.clone();
      assertEquals((-838), transportadora0.getnif());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("", "", "k2.(_Jg", 1752.2342642039, (-546.39905135), "k2.(_Jg", (-546.39905135), (-546.39905135), 1219, 1219, (-1518.5683298906977));
      Transportadora transportadora1 = transportadora0.clone();
      assertEquals((-546.39905135), transportadora0.getcustoKM(), 0.01);
      assertEquals((-1518.5683298906977), transportadora1.getavaliacao(), 0.01);
      assertEquals(1219, transportadora0.getnif());
      assertEquals(1219, transportadora1.getnif());
      assertEquals((-546.39905135), transportadora1.getraio(), 0.01);
      assertEquals((-546.39905135), transportadora0.getraio(), 0.01);
      assertEquals((-546.39905135), transportadora1.getcustoKM(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("", "", "", 2246.499256174, (-291.0013591646), "", 2246.499256174, 1326.6200649, 872, 0.5, 0.5);
      Transportadora transportadora1 = transportadora0.clone();
      assertEquals(0.5, transportadora1.getavaliacao(), 0.01);
      assertEquals(2246.499256174, transportadora0.getcustoKM(), 0.01);
      assertEquals(1326.6200649, transportadora0.getraio(), 0.01);
      assertEquals(1326.6200649, transportadora1.getraio(), 0.01);
      assertEquals(872, transportadora0.getnif());
      assertEquals(872, transportadora1.getnif());
      assertEquals(2246.499256174, transportadora1.getcustoKM(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("", "", ",", (-1274.371481929), (-1274.371481929), (String) null, (-2929.0), (-2929.0), 348, (-1274.371481929), 0.0);
      Transportadora transportadora1 = transportadora0.clone();
      assertEquals(348, transportadora0.getnif());
      assertEquals(348, transportadora1.getnif());
      assertEquals((-2929.0), transportadora0.getcustoKM(), 0.01);
      assertEquals((-2929.0), transportadora0.getraio(), 0.01);
      assertEquals((-2929.0), transportadora1.getcustoKM(), 0.01);
      assertEquals((-2929.0), transportadora1.getraio(), 0.01);
      assertEquals(0.0, transportadora1.getavaliacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      transportadora0.locationX = null;
      // Undeclared exception!
      try { 
        transportadora0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      transportadora0.locationX = null;
      // Undeclared exception!
      try { 
        transportadora0.stringtoFile();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      transportadora0.locationX = null;
      // Undeclared exception!
      try { 
        transportadora0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("traz_aqui.User", ":CG-v\"Da)q#cVrs", ":CG-v\"Da)q#cVrs", (-2315.6), (-699.79), "v>Zvm~Yk)Zpa{P9", 0.5, 0.0, 2494, 0.0, (-2315.6));
      int int0 = transportadora0.getnif();
      assertEquals(2494, int0);
      assertEquals(0.5, transportadora0.getcustoKM(), 0.01);
      assertEquals(0.0, transportadora0.getraio(), 0.01);
      assertEquals((-2315.6), transportadora0.getavaliacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora((String) null, "", "('<a;K,pP|Q#3N!xGk", 1.0, 1.0, "('<a;K,pP|Q#3N!xGk", 1.0, 1065.0, 0, 1.0, (-1.0));
      double double0 = transportadora0.getcustoKM();
      assertEquals(1.0, double0, 0.01);
      assertEquals(1065.0, transportadora0.getraio(), 0.01);
      assertEquals((-1.0), transportadora0.getavaliacao(), 0.01);
      assertEquals(0, transportadora0.getnif());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("", "", "", (-330.28722142824), (-330.28722142824), "", (-330.28722142824), (-330.28722142824), 1424, (-330.28722142824), 1424);
      double double0 = transportadora0.getnumreviews();
      assertEquals(1424.0, double0, 0.01);
      assertEquals(1424, transportadora0.getnif());
      assertEquals((-330.28722142824), transportadora0.getraio(), 0.01);
      assertEquals((-330.28722142824), transportadora0.getcustoKM(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      double double0 = transportadora0.getraio();
      assertEquals(0.0, transportadora0.getcustoKM(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, transportadora0.getavaliacao(), 0.01);
      assertEquals(0, transportadora0.getnif());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("", "", ",", (-1274.371481929), (-1274.371481929), (String) null, (-2929.0), (-2929.0), 348, (-1274.371481929), 0.0);
      Transportadora transportadora1 = new Transportadora(transportadora0);
      assertEquals(348, transportadora0.getnif());
      assertEquals((-2929.0), transportadora0.getcustoKM(), 0.01);
      assertEquals(0.0, transportadora1.getavaliacao(), 0.01);
      assertEquals((-2929.0), transportadora1.getraio(), 0.01);
      assertEquals((-2929.0), transportadora1.getcustoKM(), 0.01);
      assertEquals((-2929.0), transportadora0.getraio(), 0.01);
      assertEquals(348, transportadora1.getnif());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("oda1#b&dJ", "oda1#b&dJ", "oda1#b&dJ", 1100.5, (-1.0), "oda1#b&dJ", (-3182.342599659), (-1.0), (-999), (-1.0), (-1.0));
      double double0 = transportadora0.getavaliacao();
      assertEquals((-999), transportadora0.getnif());
      assertEquals((-1.0), double0, 0.01);
      assertEquals((-1.0), transportadora0.getraio(), 0.01);
      assertEquals((-3182.342599659), transportadora0.getcustoKM(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      Transportadora transportadora1 = new Transportadora();
      transportadora1.equals(transportadora0);
      assertEquals(0.0, transportadora1.getcustoKM(), 0.01);
      assertEquals(0.0, transportadora1.getraio(), 0.01);
      assertEquals(0, transportadora1.getnif());
      assertEquals(0.0, transportadora1.getavaliacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      boolean boolean0 = transportadora0.equals((Object) null);
      assertEquals(0.0, transportadora0.getcustoKM(), 0.01);
      assertEquals(0.0, transportadora0.getraio(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, transportadora0.getavaliacao(), 0.01);
      assertEquals(0, transportadora0.getnif());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      boolean boolean0 = transportadora0.equals(transportadora0);
      assertEquals(0.0, transportadora0.getcustoKM(), 0.01);
      assertTrue(boolean0);
      assertEquals(0.0, transportadora0.getraio(), 0.01);
      assertEquals(0.0, transportadora0.getavaliacao(), 0.01);
      assertEquals(0, transportadora0.getnif());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      Object object0 = new Object();
      boolean boolean0 = transportadora0.equals(object0);
      assertEquals(0, transportadora0.getnif());
      assertEquals(0.0, transportadora0.getraio(), 0.01);
      assertEquals(0.0, transportadora0.getcustoKM(), 0.01);
      assertEquals(0.0, transportadora0.getnumreviews(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      Transportadora transportadora1 = transportadora0.clone();
      transportadora1.locationX = null;
      // Undeclared exception!
      try { 
        transportadora0.equals(transportadora1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("traz_aqui.User", "traz_aqui.User", "traz_aqui.User", (-1275.533432), (-1275.533432), "traz_aqui.User", (-1275.533432), (-1275.533432), (-35), (-1275.533432), (-35));
      double double0 = transportadora0.gettaxapeso();
      assertEquals((-1275.533432), transportadora0.getcustoKM(), 0.01);
      assertEquals(0.5, double0, 0.01);
      assertEquals((-1275.533432), transportadora0.getraio(), 0.01);
      assertEquals((-35.0), transportadora0.getnumreviews(), 0.01);
      assertEquals((-35), transportadora0.getnif());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      String string0 = transportadora0.stringtoFile();
      assertEquals(0, transportadora0.getnif());
      assertEquals("traz_aqui.Voluntario:,,,0.0,0.0,,0.0,0.0,0.0,0.0", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      String string0 = transportadora0.toString();
      assertEquals("  0.0 0.0  0.00.000.00.0", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Transportadora transportadora0 = null;
      try {
        transportadora0 = new Transportadora((Transportadora) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.Transportadora", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      transportadora0.setavaliacao((-529.9460389104299));
      assertEquals(0.0, transportadora0.getcustoKM(), 0.01);
      assertEquals(0.0, transportadora0.getraio(), 0.01);
      assertEquals(0, transportadora0.getnif());
      assertEquals(0.0, transportadora0.getnumreviews(), 0.01);
  }
}
