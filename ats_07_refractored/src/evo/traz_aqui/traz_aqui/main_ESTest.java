/*
 * This file was automatically generated by EvoSuite
 * Sun Dec 20 01:25:38 GMT 2020
 */

package traz_aqui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import traz_aqui.Buyer;
import traz_aqui.Encomenda;
import traz_aqui.LinhaEncomenda;
import traz_aqui.Loja;
import traz_aqui.Transportadora;
import traz_aqui.User;
import traz_aqui.Voluntario;
import traz_aqui.main;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class main_ESTest extends main_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      main main0 = new main();
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      ArrayList<LinhaEncomenda> arrayList0 = new ArrayList<LinhaEncomenda>();
      Encomenda encomenda0 = new Encomenda("IQQA,Z<f|20Hk/2%", "|'z7S>S$", "5?hVf`", "5?hVf`", 0.0, localDate0, 855, arrayList0);
      int int0 = main0.addEnc(encomenda0);
      assertEquals(1, int0);
      
      String string0 = main0.EncPedidas(">@2,J8B} LRp");
      assertEquals("n", string0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      main main0 = new main();
      Buyer buyer0 = new Buyer("f_p{{E>k", (String) null, "0\t> 40reS8F1\"zNxH", (-123.2925235), (-123.2925235), "/IERXx1<oW");
      main0.addBuy(buyer0);
      Buyer buyer1 = new Buyer("f_p{{E>k", "f_p{{E>k", "f_p{{E>k", (-123.2925235), 3160.108785478237, "f_p{{E>k");
      main0.addBuy(buyer1);
      main0.top10Users();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      main main0 = main.parse("+k,", 10);
      Encomenda encomenda0 = new Encomenda();
      encomenda0.setestado(223);
      main0.addEnc(encomenda0);
      ArrayList<Encomenda> arrayList0 = main0.EncomendasParaVoluntarioDentroRaio("8S(`Jyf");
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      main main0 = main.parse("2F,{HY!HtpuU>c", 0);
      Encomenda encomenda0 = new Encomenda();
      main0.addEnc(encomenda0);
      main0.setDelieverV(":1O[wXpN1/:hP", "");
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      main main0 = main.parse(" ]h!yi(", (-536));
      Buyer buyer0 = new Buyer("@?1W qsRmaFm++Ue~N", "Aceite", "@?1W qsRmaFm++Ue~N", 812.095384748, 1090.0, "@?1W qsRmaFm++Ue~N");
      main0.addBuy(buyer0);
      User user0 = main0.getUserByEmail("@?1W qsRmaFm++Ue~N");
      assertEquals(812.095384748, user0.getLocationY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      main main0 = main.parse("G_;tz|", (-17));
      Loja loja0 = new Loja();
      Double double0 = new Double((-17));
      loja0.email = "G_;tz|";
      loja0.locationX = double0;
      main0.addLoja(loja0);
      User user0 = main0.getUserByEmail("G_;tz|");
      assertEquals((-17.0), user0.getLocationX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      main main0 = new main();
      Buyer buyer0 = new Buyer("", (String) null, "", 1869.7, 5.0, (String) null);
      main0.addBuy(buyer0);
      User user0 = main0.getUserByCodigo((String) null);
      assertNull(user0.getCodigo());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      main main0 = main.parse(",", (-691559277));
      Buyer buyer0 = new Buyer("I*u6r+m(72F'77FFCHD", ",", "traz_aqui.Buyer", (-691559277), 2451.25, "*s");
      main0.addBuy(buyer0);
      User user0 = main0.getUserByCodigo(",");
      assertEquals("I*u6r+m(72F'77FFCHD", user0.getUserName());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      main main0 = new main();
      // Undeclared exception!
      try { 
        main0.writeFile2((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      main main0 = new main();
      try { 
        main0.writeFile2("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      // Undeclared exception!
      try { 
        main.parse((String) null, 6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      main main0 = new main();
      // Undeclared exception!
      try { 
        main0.mudaestadoVoluntario((User) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.main", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      main main0 = new main();
      Loja loja0 = new Loja();
      // Undeclared exception!
      try { 
        main0.mudaestadoVoluntario(loja0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // traz_aqui.Loja cannot be cast to traz_aqui.Voluntario
         //
         verifyException("traz_aqui.main", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      main main0 = new main();
      // Undeclared exception!
      try { 
        main0.getVolLivre("`.Rr?s;Fa1RwFX0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.main", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      main main0 = main.parse("G_;tz|", 10);
      Transportadora transportadora0 = new Transportadora((String) null, "n", "G_;tz|", (-3969.12674), (-564.8812), (String) null, 0.0, (-3969.12674), 10, (-3969.12674), 10);
      main0.addTrans(transportadora0);
      // Undeclared exception!
      try { 
        main0.getUserByEmail("G_;tz|");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      main main0 = main.parse(",", (-1159));
      Encomenda encomenda0 = new Encomenda();
      main0.addEnc(encomenda0);
      // Undeclared exception!
      try { 
        main0.getNumencomendas((Buyer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.main", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      main main0 = main.parse("", 9);
      // Undeclared exception!
      try { 
        main0.faturadoEmp();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      main main0 = main.parse("Invalid Input, answer yes or no : ", (-1842043227));
      SystemInUtil.addInputLine("Invalid Input, answer yes or no : ");
      // Undeclared exception!
      try { 
        main0.faturadoEmp();
        fail("Expecting exception: InputMismatchException");
      
      } catch(InputMismatchException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      main main0 = main.parse(",", (-691559277));
      Transportadora transportadora0 = new Transportadora();
      transportadora0.password = ",";
      Transportadora transportadora1 = new Transportadora(transportadora0);
      main0.addTrans(transportadora1);
      // Undeclared exception!
      try { 
        main0.custoTransporte1(",", "traz_aqui.User", "-C]S!Iq^ Elc?<<", 1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // traz_aqui.Transportadora cannot be cast to traz_aqui.Buyer
         //
         verifyException("traz_aqui.main", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      main main0 = new main();
      Loja loja0 = new Loja();
      main0.addLoja(loja0);
      Encomenda encomenda0 = new Encomenda();
      main0.addEnc(encomenda0);
      // Undeclared exception!
      try { 
        main0.custoTransporte("", "EEV*|h4");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // traz_aqui.Loja cannot be cast to traz_aqui.Buyer
         //
         verifyException("traz_aqui.main", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      main main0 = main.parse("", 333);
      // Undeclared exception!
      try { 
        main0.addVol((Voluntario) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.main", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      main main0 = new main();
      // Undeclared exception!
      try { 
        main0.addTrans((Transportadora) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.main", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      main main0 = new main();
      // Undeclared exception!
      try { 
        main0.addLoja((Loja) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.main", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      main main0 = new main();
      // Undeclared exception!
      try { 
        main0.addEnc((Encomenda) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.main", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      main main0 = main.parse("Z+", 0);
      // Undeclared exception!
      try { 
        main0.addBuy((Buyer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.main", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      main main0 = main.parse("<.>", (-3404));
      Transportadora transportadora0 = new Transportadora();
      main0.addTrans(transportadora0);
      // Undeclared exception!
      try { 
        main0.TransportadoraMaisBarata("", "{=nZFbo,N:f", 5.0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // traz_aqui.Transportadora cannot be cast to traz_aqui.Buyer
         //
         verifyException("traz_aqui.main", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      main main0 = new main();
      Buyer buyer0 = new Buyer("", (String) null, "", 1869.7, 5.0, (String) null);
      main0.addBuy(buyer0);
      // Undeclared exception!
      try { 
        main0.LoginInfo((String) null, "Q(}u0jxue!(5#X^~");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      main main0 = main.parse("2F,{HY!HtpuU>c", 0);
      Voluntario voluntario0 = new Voluntario();
      main0.addVol(voluntario0);
      Encomenda encomenda0 = new Encomenda();
      encomenda0.setestado(1);
      main0.addEnc(encomenda0);
      Transportadora transportadora0 = new Transportadora();
      // Undeclared exception!
      try { 
        main0.KmsPercurridos(transportadora0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // traz_aqui.Voluntario cannot be cast to traz_aqui.Buyer
         //
         verifyException("traz_aqui.main", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      main main0 = new main();
      Loja loja0 = new Loja();
      main0.addLoja(loja0);
      // Undeclared exception!
      try { 
        main0.EncomendasParaVoluntarioDentroRaio("");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // traz_aqui.Loja cannot be cast to traz_aqui.Voluntario
         //
         verifyException("traz_aqui.main", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      main main0 = new main();
      Loja loja0 = new Loja();
      main0.addLoja(loja0);
      // Undeclared exception!
      try { 
        main0.EncomendaAtualV("");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // traz_aqui.Loja cannot be cast to traz_aqui.Voluntario
         //
         verifyException("traz_aqui.main", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      main main0 = new main();
      Buyer buyer0 = new Buyer((String) null, "~`|", "traz_aqui.Loja", 2892.516, (-1.0), (String) null);
      main0.addBuy(buyer0);
      ArrayList<Voluntario> arrayList0 = main0.Tvoluntarios();
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      main main0 = main.parse("2F,{HY!HtpuU>c", 0);
      Voluntario voluntario0 = new Voluntario();
      int int0 = main0.addVol(voluntario0);
      assertEquals(1, int0);
      
      ArrayList<Voluntario> arrayList0 = main0.Tvoluntarios();
      assertTrue(arrayList0.contains(voluntario0));
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      main main0 = main.parse(",", (-691559277));
      Transportadora transportadora0 = new Transportadora();
      int int0 = main0.addTrans(transportadora0);
      assertEquals(1, int0);
      
      ArrayList<Transportadora> arrayList0 = main0.Ttransportadoras();
      assertTrue(arrayList0.contains(transportadora0));
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      main main0 = new main();
      Voluntario voluntario0 = new Voluntario("tm^]]>", "tm^]]>", "G:()y5g*}>", 0.0, (-2404.9), "\n", 0.0, false, 0.0, (-2404.9));
      main0.addVol(voluntario0);
      ArrayList<Transportadora> arrayList0 = main0.Ttransportadoras();
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      main main0 = main.parse("2F,{HY!HtpuU>c", 0);
      Encomenda encomenda0 = new Encomenda();
      int int0 = main0.addEnc(encomenda0);
      assertEquals(1, int0);
      
      String string0 = main0.EncPedidas("n");
      assertEquals("n", string0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      main main0 = main.parse("2F,{HY!HtpuU>c", 0);
      Voluntario voluntario0 = new Voluntario();
      voluntario0.setraio((-2534.12862204));
      int int0 = main0.addVol(voluntario0);
      Encomenda encomenda0 = new Encomenda();
      int int1 = main0.addEnc(encomenda0);
      assertTrue(int1 == int0);
      
      String string0 = main0.getVolLivre("");
      assertEquals("n", string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      main main0 = main.parse("2F,{HY!HtpuU>c", 0);
      Voluntario voluntario0 = new Voluntario();
      int int0 = main0.addVol(voluntario0);
      Encomenda encomenda0 = new Encomenda();
      int int1 = main0.addEnc(encomenda0);
      assertTrue(int1 == int0);
      
      String string0 = main0.getVolLivre("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      main main0 = main.parse("2F,{HY!HtpuU>c", 0);
      Voluntario voluntario0 = new Voluntario();
      int int0 = main0.addVol(voluntario0);
      assertEquals(1, int0);
      
      ArrayList<Voluntario> arrayList0 = main0.Vlivre();
      assertTrue(arrayList0.contains(voluntario0));
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      main main0 = new main();
      Loja loja0 = new Loja();
      main0.addLoja(loja0);
      Encomenda encomenda0 = new Encomenda();
      main0.addEnc(encomenda0);
      main0.recebeEnc("", "");
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      main main0 = new main();
      Encomenda encomenda0 = new Encomenda();
      main0.addEnc(encomenda0);
      main0.recebeEnc("", "");
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      main main0 = main.parse("Invalid Input, answer yes or no : ", (-1842043227));
      main0.recebeEnc(",", (String) null);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      main main0 = main.parse("2F,{HY!HtpuU>c", 0);
      Encomenda encomenda0 = new Encomenda();
      main0.addEnc(encomenda0);
      main0.mudaestadoENC("", (-1));
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      main main0 = main.parse("Invalid Input, answer yes or no : ", (-1842043227));
      main0.mudaestadoENC("-C]S!Iq^ Elc?<<", 2544);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      main main0 = main.parse("2F,{HY!HtpuU>c", 0);
      Voluntario voluntario0 = new Voluntario();
      int int0 = main0.addVol(voluntario0);
      Encomenda encomenda0 = new Encomenda();
      int int1 = main0.addEnc(encomenda0);
      assertTrue(int1 == int0);
      
      String string0 = main0.EncomendaAtualV("");
      assertEquals("free", string0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      main main0 = main.parse("", 2);
      Encomenda encomenda0 = new Encomenda();
      main0.addEnc(encomenda0);
      // Undeclared exception!
      try { 
        main0.EncomendaAtualV("n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.main", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      main main0 = main.parse(",", (-691559277));
      Transportadora transportadora0 = new Transportadora();
      transportadora0.password = "traz_aqui.Voluntario";
      Transportadora transportadora1 = new Transportadora(transportadora0);
      main0.addTrans(transportadora1);
      main0.ReviewVoluntario("traz_aqui.Voluntario", 1);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      main main0 = main.parse("traz_aqui.Encomenda:", (-1));
      main0.ReviewVoluntario("}IrY^aVS0VAF", (-1));
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      main main0 = new main();
      Transportadora transportadora0 = new Transportadora("-G|I#pRVQ", "-G|I#pRVQ", "L[4_L(LY_&", (-0.05896085013839147), (-0.05896085013839147), "EEV*|h4", (-0.05896085013839147), (-0.05896085013839147), 517, (-1603.71975574911), 0.0);
      main0.addTrans(transportadora0);
      main0.ReviewTransportadora("-G|I#pRVQ", 0.0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      main main0 = main.parse("", 0);
      Buyer buyer0 = new Buyer();
      main0.addBuy(buyer0);
      main0.ReviewTransportadora("", 0.0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      main main0 = new main();
      main0.ReviewTransportadora("", 1);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      main main0 = new main();
      Encomenda encomenda0 = new Encomenda();
      main0.addEnc(encomenda0);
      // Undeclared exception!
      try { 
        main0.reviews("", 3923.94814404);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.main", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      main main0 = main.parse("2F,{HY!HtpuU>c", 0);
      boolean boolean0 = main0.reviews("2Vz'b$B/<+1W", 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      main main0 = main.parse("traz_aqui.Encomenda:", (-1));
      Encomenda encomenda0 = new Encomenda();
      int int0 = main0.addEnc(encomenda0);
      assertEquals(1, int0);
      
      ArrayList arrayList0 = main0.EncomendasEntreguesSemReviews("");
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      main main0 = main.parse("m/o;|5YHZ", 0);
      Loja loja0 = new Loja();
      int int0 = main0.addLoja(loja0);
      assertEquals(1, int0);
      
      boolean boolean0 = main0.LoginInfo("m/o;|5YHZ", "m/o;|5YHZ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      main main0 = main.parse("", 9);
      Loja loja0 = new Loja();
      int int0 = main0.addLoja(loja0);
      assertEquals(1, int0);
      
      boolean boolean0 = main0.LoginInfo("", "");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      main main0 = new main();
      Buyer buyer0 = new Buyer("`Sn/9a", "F", "PzV>dcUm", (-1851.9578201752), 0, "F");
      main0.addBuy(buyer0);
      main0.PrintHistV("F");
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      main main0 = main.parse("2F,{HY!HtpuU>c", 0);
      Voluntario voluntario0 = new Voluntario();
      main0.addVol(voluntario0);
      main0.PrintHistV("");
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      main main0 = new main();
      main0.PrintHistV((String) null);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      main main0 = main.parse(",", (-691559277));
      Transportadora transportadora0 = new Transportadora();
      transportadora0.password = ",";
      Transportadora transportadora1 = new Transportadora(transportadora0);
      main0.addTrans(transportadora1);
      main0.PrintHistT(",");
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      main main0 = main.parse("", (-487));
      Voluntario voluntario0 = new Voluntario("", "", "", (-487), (-487), "", (-487), false, 1034.1943195757, 1034.1943195757);
      main0.addVol(voluntario0);
      main0.PrintHistT("");
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      main main0 = main.parse("2F,{HY!HtpuU>c", 0);
      main0.PrintHistT("2F,{HY!HtpuU>c");
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      main main0 = new main();
      Encomenda encomenda0 = new Encomenda();
      int int0 = main0.addEnc(encomenda0);
      assertEquals(1, int0);
      
      Transportadora transportadora0 = new Transportadora("YB=4rjND>d#+<Z)$7", "8d*,fl%wRZGuFjTY", "traz_aqui.Buyer", 1.0, 0.0, "DU]-vUu|(GH38\"\"", 0.0, (-1603.71975574911), (-1665630857), 695.53, (-1665630857));
      double double0 = main0.fatura(transportadora0, (LocalDate) null, (LocalDate) null);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      main main0 = main.parse("2F,{HY!HtpuU>c", 0);
      Encomenda encomenda0 = new Encomenda();
      main0.addEnc(encomenda0);
      Transportadora transportadora0 = new Transportadora();
      LocalDate localDate0 = MockLocalDate.now();
      // Undeclared exception!
      try { 
        main0.fatura(transportadora0, localDate0, localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.main", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      main main0 = main.parse("2F,{HY!HtpuU>c", 0);
      Voluntario voluntario0 = new Voluntario();
      main0.addVol(voluntario0);
      main0.top10Users();
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      main main0 = new main();
      Encomenda encomenda0 = new Encomenda();
      int int0 = main0.addEnc(encomenda0);
      assertEquals(1, int0);
      
      Buyer buyer0 = new Buyer();
      int int1 = main0.getNumencomendas(buyer0);
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      main main0 = new main();
      Transportadora transportadora0 = new Transportadora();
      main0.addTrans(transportadora0);
      main0.top10Empresas();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      main main0 = new main();
      Encomenda encomenda0 = new Encomenda();
      main0.addEnc(encomenda0);
      // Undeclared exception!
      try { 
        main0.custoTransporte("", "EEV*|h4");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.main", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      main main0 = main.parse(",", (-691559277));
      double double0 = main0.custoTransporte(",", ",");
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      main main0 = new main();
      Voluntario voluntario0 = new Voluntario();
      int int0 = main0.addVol(voluntario0);
      Encomenda encomenda0 = new Encomenda();
      int int1 = main0.addEnc(encomenda0);
      assertTrue(int1 == int0);
      
      int int2 = main0.TransportadoraOuVoluntario("");
      assertEquals(2, int2);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      main main0 = main.parse("2F,{HY!HtpuU>c", 0);
      Encomenda encomenda0 = new Encomenda();
      int int0 = main0.addEnc(encomenda0);
      Transportadora transportadora0 = new Transportadora();
      int int1 = main0.addTrans(transportadora0);
      assertEquals(1, int1);
      
      int int2 = main0.TransportadoraOuVoluntario("");
      assertTrue(int2 == int0);
      assertEquals(1, int2);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      main main0 = new main();
      Loja loja0 = new Loja();
      int int0 = main0.addLoja(loja0);
      Encomenda encomenda0 = new Encomenda();
      int int1 = main0.addEnc(encomenda0);
      assertTrue(int1 == int0);
      
      int int2 = main0.TransportadoraOuVoluntario("");
      assertEquals(0, int2);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      main main0 = main.parse(",Store: ", (-314));
      Encomenda encomenda0 = new Encomenda();
      main0.addEnc(encomenda0);
      // Undeclared exception!
      try { 
        main0.TransportadoraOuVoluntario("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.main", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      main main0 = main.parse("", 0);
      int int0 = main0.TransportadoraOuVoluntario("");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      main main0 = new main();
      Encomenda encomenda0 = new Encomenda();
      main0.addEnc(encomenda0);
      ArrayList<Encomenda> arrayList0 = main0.EncomendasParaVoluntarioDentroRaio("r%uNYmY2],c|");
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      main main0 = main.parse("2F,{HY!HtpuU>c", 0);
      Encomenda encomenda0 = new Encomenda();
      encomenda0.setestado(1);
      main0.addEnc(encomenda0);
      Transportadora transportadora0 = new Transportadora();
      // Undeclared exception!
      try { 
        main0.KmsPercurridos(transportadora0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.main", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      main main0 = new main();
      Transportadora transportadora0 = new Transportadora("-G|I#pRVQ", "-G|I#pRVQ", "L[4_L(LY_&", 0.0, 0.0, "EEV*|h4", 0.0, 0.0, 517, (-1603.71975574911), 0.0);
      Encomenda encomenda0 = new Encomenda();
      int int0 = main0.addEnc(encomenda0);
      assertEquals(1, int0);
      
      double double0 = main0.KmsPercurridos(transportadora0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      main main0 = main.parse("2F,{HY!HtpuU>c", 0);
      Encomenda encomenda0 = new Encomenda();
      int int0 = main0.addEnc(encomenda0);
      assertEquals(1, int0);
      
      Transportadora transportadora0 = new Transportadora();
      double double0 = main0.KmsPercurridos(transportadora0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      main main0 = main.parse("", (-487));
      main0.mudaEstado("^E");
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      main main0 = new main();
      Encomenda encomenda0 = new Encomenda();
      int int0 = main0.addEnc(encomenda0);
      assertEquals(1, int0);
      
      int int1 = main0.addEnc(encomenda0);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      main main0 = new main();
      Transportadora transportadora0 = new Transportadora();
      int int0 = main0.addTrans(transportadora0);
      assertEquals(1, int0);
      
      int int1 = main0.addTrans(transportadora0);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      main main0 = new main();
      Loja loja0 = new Loja();
      int int0 = main0.addLoja(loja0);
      assertEquals(1, int0);
      
      int int1 = main0.addLoja(loja0);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      main main0 = main.parse("", (-487));
      Voluntario voluntario0 = new Voluntario("", "", "", (-487), (-487), "", (-487), false, 1034.1943195757, 1034.1943195757);
      main0.addVol(voluntario0);
      main0.top10Empresas();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      main main0 = main.parse("", 0);
      Buyer buyer0 = new Buyer();
      int int0 = main0.addBuy(buyer0);
      assertEquals(1, int0);
      
      int int1 = main0.addBuy(buyer0);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      main main0 = new main();
      Loja loja0 = new Loja();
      int int0 = main0.addLoja(loja0);
      assertEquals(1, int0);
      
      boolean boolean0 = main0.checkCodigo("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      main main0 = new main();
      boolean boolean0 = main0.checkCodigo((String) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      main main0 = new main();
      Voluntario voluntario0 = new Voluntario();
      main0.mudaestadoVoluntario(voluntario0);
      assertFalse(voluntario0.getlivre());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      main main0 = new main();
      Voluntario voluntario0 = new Voluntario((String) null, "", (String) null, 0.0, (-1.0), "lv8yA9.#TO,|+YSh", (-1.0), false, (-1.0), 58.322648062);
      main0.mudaestadoVoluntario(voluntario0);
      assertTrue(voluntario0.getlivre());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      main main0 = new main();
      Loja loja0 = new Loja();
      main0.addLoja(loja0);
      User user0 = main0.getUserByCodigo("");
      assertNotSame(user0, loja0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      main main0 = new main();
      User user0 = main0.getUserByCodigo("EEV*|h4");
      assertNull(user0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      main main0 = new main();
      Voluntario voluntario0 = new Voluntario("tm^]]>", "tm^]]>", "G:()y5g*}>", 0.0, (-2404.9), "\n", 0.0, false, 0.0, (-2404.9));
      int int0 = main0.addVol(voluntario0);
      assertEquals(1, int0);
      
      ArrayList<Voluntario> arrayList0 = main0.Vlivre();
      assertFalse(arrayList0.contains(voluntario0));
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      main main0 = new main();
      Transportadora transportadora0 = new Transportadora();
      main0.addTrans(transportadora0);
      // Undeclared exception!
      try { 
        main0.TransportadoraMaisBarata("traz_aqui.Buyer: ", "tSBntB}qb]1.3A", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.main", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      main main0 = new main();
      Buyer buyer0 = new Buyer("no", "no", "~8/Ovq", 4, (-4229.750730735926), "~8/Ovq");
      int int0 = main0.addBuy(buyer0);
      assertEquals(1, int0);
      
      String string0 = main0.TransportadoraMaisBarata(";,x:M7(c%", "aF8\"IV S", 1);
      assertEquals("n", string0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      main main0 = new main();
      Loja loja0 = new Loja(";,x:M7(c%", "/IERXx1<oW", ";,x:M7(c%", (-1561.8478), 4, "A)HPJ2YjzI%L GM");
      int int0 = main0.addLoja(loja0);
      assertEquals(1, int0);
      
      ArrayList<Loja> arrayList0 = main0.Tlojas();
      assertTrue(arrayList0.contains(loja0));
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      main main0 = new main();
      Buyer buyer0 = new Buyer("no", "no", "~8/Ovq", 4, (-4229.750730735926), "~8/Ovq");
      main0.addBuy(buyer0);
      ArrayList<Loja> arrayList0 = main0.Tlojas();
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      main main0 = new main();
      Encomenda encomenda0 = new Encomenda();
      int int0 = main0.addEnc(encomenda0);
      assertEquals(1, int0);
      
      ArrayList<Encomenda> arrayList0 = main0.getEncomendasbyCodigoUser("");
      assertTrue(arrayList0.contains(encomenda0));
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      main main0 = new main();
      Encomenda encomenda0 = new Encomenda();
      int int0 = main0.addEnc(encomenda0);
      assertEquals(1, int0);
      
      ArrayList<Encomenda> arrayList0 = main0.getEncomendasbyCodigoUser("EEV*|h4");
      assertFalse(arrayList0.contains(encomenda0));
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      main main0 = main.parse("", 0);
      Buyer buyer0 = new Buyer();
      main0.addBuy(buyer0);
      User user0 = main0.getUserByEmail("");
      assertEquals("", user0.getUserName());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      main main0 = new main();
      Buyer buyer0 = new Buyer("no", "no", "~8/Ovq", 4, (-4229.750730735926), "~8/Ovq");
      main0.addBuy(buyer0);
      User user0 = main0.getUserByEmail("A)HPJ2YjzI%L GM");
      assertNull(user0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      main main0 = new main();
      Encomenda encomenda0 = new Encomenda();
      main0.addEnc(encomenda0);
      main0.writeFile2("Cp;R]`v");
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      main main0 = new main();
      Buyer buyer0 = new Buyer("no", "no", "~8/Ovq", 4, (-4229.750730735926), "~8/Ovq");
      main0.addBuy(buyer0);
      main0.writeFile2("no");
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      main main0 = main.parse(",", (-691559277));
      // Undeclared exception!
      try { 
        main0.custoTransporte1(",", "traz_aqui.User", ",", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.main", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      main main0 = new main();
      // Undeclared exception!
      try { 
        main0.setDelieverV("traz_aqui.User", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.main", e);
      }
  }
}
