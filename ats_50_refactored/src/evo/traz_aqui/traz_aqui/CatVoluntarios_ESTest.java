package traz_aqui;/*
 * This file was automatically generated by EvoSuite
 * Sun Dec 20 00:23:10 GMT 2020
 */

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CatVoluntarios_ESTest extends CatVoluntarios_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas(1.0, (-239.5836));
      Coordenadas coordenadas1 = new Coordenadas(coordenadas0);
      Double double0 = new Double((-1.0));
      // Undeclared exception!
      try { 
        catVoluntarios0.calcTmp(coordenadas1, coordenadas0, double0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.CatVoluntarios", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas(1449.9, 0.0);
      Coordenadas coordenadas1 = new Coordenadas(coordenadas0);
      List<StringDistAux> list0 = catVoluntarios0.melhorTransporteV(coordenadas0, coordenadas1, false);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas(391.93, 0.0);
      Voluntario voluntario0 = new Voluntario("", "v", 391.93, coordenadas0, 0.0, true, 1.0, "v", "", (-1));
      catVoluntarios0.adicionaVolunt(voluntario0);
      catVoluntarios0.setCoords("", coordenadas0);
      assertEquals(1, catVoluntarios0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas((-1.0), (-1074.409595917353));
      Voluntario voluntario0 = new Voluntario("OQ^*H>)Hf_V*_", "OQ^*H>)Hf_V*_", (-1074.409595917353), coordenadas0, (-1074.409595917353), true, (-1.0), "OQ^*H>)Hf_V*_", "OQ^*H>)Hf_V*_", 49);
      catVoluntarios0.adicionaVolunt(voluntario0);
      catVoluntarios0.dimCap("OQ^*H>)Hf_V*_");
      assertEquals(1, catVoluntarios0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas(1.0, 1.0);
      catVoluntarios0.signupV("", "", 0.0, coordenadas0, 807.5327, true, 0.0, "", "", 1971);
      boolean boolean0 = catVoluntarios0.verMail("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas(803.003547889561, 803.003547889561);
      catVoluntarios0.signupV("v85", "v85", 803.003547889561, coordenadas0, 1.0, false, 1.0, "3'-+YwaFl", "traz_aqui.Coordenadas", 0);
      int int0 = catVoluntarios0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas(1449.9, 1449.9);
      Voluntario voluntario0 = new Voluntario("v", "v", 1449.9, coordenadas0, 1449.9, true, 1449.9, "v", "v", 30);
      catVoluntarios0.adicionaVolunt(voluntario0);
      List<StringDistAux> list0 = catVoluntarios0.melhorTransporteV(coordenadas0, coordenadas0, true);
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas(1.0, 1.0);
      catVoluntarios0.signupV("", "", 0.0, coordenadas0, 807.5327, true, 0.0, "", "", 1971);
      String string0 = catVoluntarios0.loginV("", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas((-880.61563), 0.0);
      coordenadas0.setY((-2684.980899474));
      Voluntario voluntario0 = new Voluntario("Dw", "", (-880.61563), coordenadas0, 0.0, true, (-880.61563), "", "Ge$lP]'f'!U%6ySM", 0);
      catVoluntarios0.adicionaVolunt(voluntario0);
      Coordenadas coordenadas1 = catVoluntarios0.getCord("Dw");
      assertEquals((-2684.980899474), coordenadas1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas(1449.9, 0.0);
      Voluntario voluntario0 = new Voluntario("Dw", "", 1449.9, coordenadas0, 0.0, true, 1449.9, "", "Dw", 0);
      catVoluntarios0.adicionaVolunt(voluntario0);
      coordenadas0.setX(0.0);
      Coordenadas coordenadas1 = catVoluntarios0.getCord("Dw");
      assertFalse(coordenadas1.equals((Object)coordenadas0));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas(803.003547889561, 803.003547889561);
      catVoluntarios0.signupV("v85", "v85", 803.003547889561, coordenadas0, 1.0, false, 1.0, "3'-+YwaFl", "traz_aqui.Coordenadas", 0);
      Coordenadas coordenadas1 = catVoluntarios0.getCord("v85");
      assertFalse(coordenadas1.equals((Object)coordenadas0));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas(1.0, 1.0);
      Voluntario voluntario0 = new Voluntario("*Y2C(!?6ync", "*Y2C(!?6ync", 1.0, coordenadas0, 0.0, true, 0.0, "*Y2C(!?6ync", ":]zsxh4(_", (-2113));
      catVoluntarios0.adicionaVolunt(voluntario0);
      double double0 = catVoluntarios0.getClas("*Y2C(!?6ync");
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas(1449.9, 0.0);
      Voluntario voluntario0 = new Voluntario("Dw", "", 1449.9, coordenadas0, 0.0, true, 1449.9, "", "Dw", 0);
      catVoluntarios0.adicionaVolunt(voluntario0);
      catVoluntarios0.adicionaCla("Dw", 1.0);
      double double0 = catVoluntarios0.getClas("Dw");
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas(1883.84, 0.0);
      catVoluntarios0.signupV((String) null, "", 1883.84, coordenadas0, (-1.0), false, 0.0, "3'-+YwaFl", "3'-+YwaFl", 179);
      double double0 = catVoluntarios0.getClas((String) null);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas(0.0, 0.0);
      Voluntario voluntario0 = new Voluntario("", "", 0.0, coordenadas0, 0.0, false, 514.47, "", "", 0);
      catVoluntarios0.adicionaVolunt(voluntario0);
      int int0 = catVoluntarios0.getCap("");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Coordenadas coordenadas0 = new Coordenadas(0.0, (-201.02));
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      catVoluntarios0.signupV("PeWptzk+bt1", "F5J[/atk", (-201.02), coordenadas0, 0.0, false, (-686.1129149713), "F5J[/atk", "#]C9>`t", 368);
      int int0 = catVoluntarios0.getCap("PeWptzk+bt1");
      assertEquals(368, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas(1.0, 1.0);
      Voluntario voluntario0 = new Voluntario("*Y2C(!?6ync", "*Y2C(!?6ync", 1.0, coordenadas0, 0.0, true, 0.0, "*Y2C(!?6ync", ":]zsxh4(_", (-2113));
      catVoluntarios0.adicionaVolunt(voluntario0);
      int int0 = catVoluntarios0.getCap("*Y2C(!?6ync");
      assertEquals((-2113), int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas(1.0, (-239.5836));
      Voluntario voluntario0 = new Voluntario((String) null, "`K&#a", 0.0, coordenadas0, 2.0, true, (-239.5836), "traz_aqui.Coordenadas", "3'-+YwaFl", (-1436));
      catVoluntarios0.adicionaVolunt(voluntario0);
      Double double0 = new Double(0.0);
      double double1 = catVoluntarios0.calcTmp(coordenadas0, coordenadas0, double0, (String) null);
      assertEquals(0.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Double double0 = new Double((-1.0));
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas((-1.0), 0.0);
      Coordenadas coordenadas1 = new Coordenadas(0.0, 0.9814786936702952);
      Voluntario voluntario0 = new Voluntario("", "-~N`O_a%<", (-853), coordenadas0, 0.0, true, 1.0, "v11", "v48", (-1952257860));
      catVoluntarios0.adicionaVolunt(voluntario0);
      double double1 = catVoluntarios0.calcTmp(coordenadas1, coordenadas1, double0, "");
      assertEquals(0.4011782278242655, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas(1.0, (-239.5836));
      Voluntario voluntario0 = new Voluntario((String) null, "`K&#a", 0.0, coordenadas0, 2.0, true, (-239.5836), "traz_aqui.Coordenadas", "3'-+YwaFl", (-1436));
      catVoluntarios0.adicionaVolunt(voluntario0);
      Double double0 = new Double((-1.0));
      double double1 = catVoluntarios0.calcTmp(coordenadas0, coordenadas0, double0, (String) null);
      assertEquals((-1.0), double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas(1.0, 1.0);
      Voluntario voluntario0 = new Voluntario(" f,3N6TkNI", " f,3N6TkNI", 1.0, coordenadas0, 3678.32996717004, false, 3678.32996717004, (String) null, " f,3N6TkNI", 0);
      catVoluntarios0.adicionaVolunt(voluntario0);
      // Undeclared exception!
      try { 
        catVoluntarios0.verMail("u$Uy'q:S");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      catVoluntarios0.signupV("H`%E", "H`%E", 0.0, (Coordenadas) null, 0.0, true, 0.0, "traz_aqui.Voluntario", "H`%E", 2933);
      Coordenadas coordenadas0 = new Coordenadas(3316.235, 3316.235);
      // Undeclared exception!
      try { 
        catVoluntarios0.melhorTransporteV(coordenadas0, coordenadas0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.Voluntario", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      catVoluntarios0.signupV("j", "j", 1466.79597081, (Coordenadas) null, 1466.79597081, true, 1466.79597081, (String) null, "v", (-1239));
      // Undeclared exception!
      try { 
        catVoluntarios0.loginV("j", "traz_aqui.CatVoluntarios");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      // Undeclared exception!
      try { 
        catVoluntarios0.adicionaVolunt((Voluntario) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.CatVoluntarios", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas(1883.84, 0.0);
      catVoluntarios0.signupV((String) null, "", 1883.84, coordenadas0, (-1.0), false, 0.0, "3'-+YwaFl", "3'-+YwaFl", 179);
      String string0 = catVoluntarios0.codUnicoV();
      //  // Unstable assertion: assertEquals("v44", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      String string0 = catVoluntarios0.codUnicoV();
      //  // Unstable assertion: assertNotNull(string0);
      //  // Unstable assertion: assertEquals("v10", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas(1449.9, 0.0);
      Voluntario voluntario0 = new Voluntario("Dw", "", 1449.9, coordenadas0, 0.0, true, 1449.9, "", "Dw", 0);
      catVoluntarios0.adicionaVolunt(voluntario0);
      String string0 = catVoluntarios0.loginV("", "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas(1449.9, 0.0);
      Voluntario voluntario0 = new Voluntario("Dw", "", 1449.9, coordenadas0, 0.0, true, 1449.9, "", "Dw", 0);
      catVoluntarios0.adicionaVolunt(voluntario0);
      String string0 = catVoluntarios0.loginV("Dw", "v54");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas(1449.9, 1449.9);
      Voluntario voluntario0 = new Voluntario("v", "v", 1449.9, coordenadas0, 1449.9, true, 1449.9, "v", "v", 30);
      catVoluntarios0.adicionaVolunt(voluntario0);
      String string0 = catVoluntarios0.loginV("v", "v");
      assertEquals("v", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas(1449.9, 1449.9);
      Voluntario voluntario0 = new Voluntario("v", "v", 1449.9, coordenadas0, 1449.9, true, 1449.9, "v", "v", 30);
      catVoluntarios0.adicionaVolunt(voluntario0);
      Map<String, Voluntario> map0 = catVoluntarios0.getVoluntario();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Map<String, Voluntario> map0 = catVoluntarios0.getVoluntario();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas(0, (-1.0));
      // Undeclared exception!
      try { 
        catVoluntarios0.setCoords((String) null, coordenadas0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.CatVoluntarios", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      // Undeclared exception!
      try { 
        catVoluntarios0.getClas("v");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.CatVoluntarios", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      // Undeclared exception!
      try { 
        catVoluntarios0.getCap("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.CatVoluntarios", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      // Undeclared exception!
      try { 
        catVoluntarios0.dimCap((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.CatVoluntarios", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      Coordenadas coordenadas0 = new Coordenadas(0.0, 1.0);
      Voluntario voluntario0 = new Voluntario("ol", "a5D98e\"hX_", (-2672.4), coordenadas0, (-1.0), true, 0.0, "ol", "a5D98e\"hX_", (-1431655764));
      catVoluntarios0.adicionaVolunt(voluntario0);
      catVoluntarios0.aumCap("ol");
      assertEquals(1, catVoluntarios0.size());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      // Undeclared exception!
      try { 
        catVoluntarios0.aumCap("ol");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.CatVoluntarios", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      // Undeclared exception!
      try { 
        catVoluntarios0.getCord("X");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.CatVoluntarios", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      boolean boolean0 = catVoluntarios0.verMail("u$Uy'q:S");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      // Undeclared exception!
      try { 
        catVoluntarios0.adicionaCla("v", 1449.9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("traz_aqui.CatVoluntarios", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CatVoluntarios catVoluntarios0 = new CatVoluntarios();
      int int0 = catVoluntarios0.size();
      assertEquals(0, int0);
  }
}
